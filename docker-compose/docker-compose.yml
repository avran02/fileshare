version: '3.9'


x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2024-06-13T22-53-53Z
  command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  expose:
    - "9000"
    - "9001"
  # healthcheck:
  #   test: ["CMD", "mc", "ready", "local"]
  #   interval: 5s
  #   timeout: 5s
  #   retries: 5
  deploy:
    resources:
      limits:
        cpus: '0.5'  
        memory: 512M 
    restart_policy:
      condition: on-failure
      max_attempts: 3
      delay: 10s
  networks:
    - backend

services:
  caddy:
    image: caddy:2.8.4-alpine
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./html:/srv

    networks:
      - backend
      - frontend

  files:
    image: fileshare/files:latest
    build:
      context: ../files
      dockerfile: dev.dockerfile
    depends_on:
      - minio1
      - minio2
    expose:
      - 50051
    # ports: 
      # - 50051:50051
    volumes:
      - ../files/config.yml:/root/config.yml
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
      resources:
        limits:
          cpus: '0.5'  
          memory: 512M
    networks:
      - backend

  gateway:
    image: fileshare/gateway:latest
    build:
      context: ../gateway
      dockerfile: dev.dockerfile
    depends_on:
      - files
    volumes:
      - ../gateway/config.yml:/root/config.yml
    # ports:
    #   - 3000:3000
    expose:
      - 3000
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
      resources:
        limits:
          cpus: '0.5'  
          memory: 512M
    networks:
      - backend

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
    networks:
      - backend

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

